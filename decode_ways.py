# -*- coding: utf-8 -*-
"""Decode_Ways.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1g5Xo2pz8Ol5rkdMKtB_O-5rEO6E_ME--
"""

# Leetcode : https://leetcode.com/problems/decode-ways/

class Solution:
    def numDecodings(self, s: str) -> int:
            if not s or s[0] == "0":
                return 0

            n = len(s)
            dp = [0] * (n + 1)
            dp[0] = 1
            dp[1] = 1

            for i in range(2, n + 1):
                one_digit = int(s[i - 1])
                two_digits = int(s[i - 2:i])

                if one_digit >= 1:
                    dp[i] += dp[i - 1]

                if 10 <= two_digits <= 26:
                    dp[i] += dp[i - 2]

            return dp[n]