# -*- coding: utf-8 -*-
"""Minimum_Time_to_Make_Rope_Colorful.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1atIkKaZDBmWJwBHV5pBTdzmC76O4DhVP
"""

#Leetcode :https://leetcode.com/problems/minimum-time-to-make-rope-colorful/

class Solution:
    def minCost(self, colors: str, neededTime: List[int]) -> int:
        l=res=0
        for r in range(1,len(colors)):
            if colors[l]==colors[r]:
                if neededTime[l]<neededTime[r]:
                    res+=neededTime[l]
                    l=r
                else:
                    res+=neededTime[r]

            else:
                l=r
        return res