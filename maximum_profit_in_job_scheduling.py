# -*- coding: utf-8 -*-
"""Maximum Profit in Job Scheduling.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JhVeoGM25AbjjauGKpXEmOw6RZwZ-MxG
"""

# Leetcode : https://leetcode.com/problems/maximum-profit-in-job-scheduling/

class Solution:
    def jobScheduling(self, startTime: List[int], endTime: List[int], profit: List[int]) -> int:
        intervals= sorted(zip(startTime,endTime,profit))
        cache={}

        def dfs(i):
            if i == len(intervals):
                return 0
            if i in cache:
                return cache[i]

            res= dfs(i+1)

            j=bisect.bisect(intervals, (intervals[i][1],-1,-1))
            cache[i]=res=max(res,intervals[i][2]+dfs(j))
            return res

        return dfs(0)