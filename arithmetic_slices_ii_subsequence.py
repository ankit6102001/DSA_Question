# -*- coding: utf-8 -*-
"""Arithmetic Slices II - Subsequence.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JhVeoGM25AbjjauGKpXEmOw6RZwZ-MxG
"""

# Leetcode : https://leetcode.com/problems/arithmetic-slices-ii-subsequence/

class Solution:
    def numberOfArithmeticSlices(self, nums: List[int]) -> int:
        res , n=0,len(nums)
        dp= [defaultdict(int) for _ in range(n)]

        for i in range(n):
            for j in range(i):
                diff= nums[i] - nums[j]
                dp[i][diff]+= 1+ dp[j][diff]
                res+= dp[j][diff]

        return res